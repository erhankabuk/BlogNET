@model Post
@{
    ViewData["Title"] = Model.Title;
}
<!-- Post content-->
<article>
    <!-- Post header-->
    <header class="mb-4">
        <!-- Post title-->
        <h1 class="fw-bolder mb-1">@Model.Title</h1>
        <!-- Post meta content-->
        <div class="text-muted fst-italic mb-2">Posted on @Model.CreatedTime</div>
        <!-- Post categories-->
        <a class="badge bg-secondary text-decoration-none link-light" asp-controller="Home" asp-action="Index" asp-route-slug="@Model.Category.Slug">@Model.Category.Name</a>
    </header>
    <!-- Preview image figure-->
    <figure class="mb-4"><img class="w-100 rounded" src="~/uploads/@Model.PhotoPath" alt="@Model.Title" /></figure>
    <!-- Post content-->
    <section class="mb-5">
        @Html.Raw(Model.Content)
    </section>
</article>
<!-- Comments section-->
<section class="mb-5" id="comments">
    <div class="card bg-light">
        <div class="card-body">
            @if (Context.Request.Query["message"] == "received")
            {
                <div class="alert alert-success">
                    Your comment has been received succesfully.
                </div>
            }
            <!-- Comment form-->
            @if (!User.Identity.IsAuthenticated)
            {
                <div class="alert alert-warning text-center">
                    Please <a asp-area="Identity" asp-page="/Account/Login" asp-route-ReturnUrl="@Context.Request.Path" class="link-dark">login</a> or <a asp-area="Identity" asp-page="/Account/Register" asp-route-ReturnUrl="@Context.Request.Path" class="link-dark">register</a> to post a comment!
                </div>
            }
            else
            {
                <div id="replying-to-box" class="d-none border bg-white text-secondary p-2 mb-2 fst-italic">
                    <i class="fas fa-reply"></i>
                    Replying to <span id="reply-to"></span>
                    <a id="cancel-replying" href="#" class="float-end btn-close"></a>
                </div>
                <form id="frmComment" asp-controller="Home" asp-action="Comment" class="row mb-4 align-items-end" method="post">
                    <input type="hidden" name="PostId" value="@Model.Id" />
                    <input type="hidden" name="Slug" value="@Model.Slug" />
                    <input type="hidden" id="ParentId" name="ParentId" value="" />
                    <div class="col">
                        <textarea id="commentContent" name="content" class="form-control" rows="3" placeholder="Leave a comment!"></textarea>
                    </div>
                    <div class="col-auto ps-0">
                        <button class="btn btn-primary">Submit</button>
                    </div>
                </form>

            }
            @foreach (Comment comment in Model.Comments.Where(x => x.ParentId == null && x.IsPublished))
            {
                <!-- Comment with nested comments-->
                <div class="d-flex mb-4">
                    <!-- Parent comment-->
                    <div class="flex-shrink-0">
                        <img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." />
                    </div>
                    <div class="ms-3 flex-grow-1">
                        <div class="fw-bold">@BeforeAt(comment.Author.UserName)</div>
                        @comment.Content
                        @if (User.Identity.IsAuthenticated)
                        {
                            <a href="#comments" data-reply-id="@comment.Id" data-reply-to="@BeforeAt(comment.Author.UserName)">Reply</a>
                        }
                        else
                        {
                            <a tabindex="0" class="c-pointer" data-reply-id="@comment.Id" data-reply-to="@BeforeAt(comment.Author.UserName)" data-bs-toggle="popover" data-bs-trigger="focus" data-bs-content="Please login or register to post a comment.">Reply</a>
                        }

                        @foreach (Comment subcomment in comment.Children.Where(x=>x.IsPublished))
                        {
                            <!-- Child comment-->
                            <div class="d-flex mt-4">
                                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                                <div class="ms-3">
                                    <div class="fw-bold">@BeforeAt(subcomment.Author.UserName)</div>
                                    @subcomment.Content
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@{
    string BeforeAt(string email)
    {
        int indexOfAt = email.IndexOf("@");
        return email.Substring(0, indexOfAt);
    }
}

@section Scripts {
    <script>
        $("[data-reply-id]").click(function () {
            var replyId = $(this).data("reply-id");
            var replyTo = $(this).data("reply-to");
            $("#reply-to").text("@@" + replyTo);
            $("#ParentId").val(replyId);
            $("#replying-to-box").removeClass("d-none");
        });

        $("#cancel-replying").click(function (event) {
            event.preventDefault();
            $("#replying-to-box").addClass("d-none");
            $("#reply-to").text("");
            $("#ParentId").val("");
        });

        var commentContent = document.getElementById("commentContent");

        if (commentContent) {
            commentContent.oninput = function () {
                var content = commentContent.value.trim();
                commentContent.setCustomValidity(content ? "" : "Please fill this area.");
            };
        }
    </script>
} 